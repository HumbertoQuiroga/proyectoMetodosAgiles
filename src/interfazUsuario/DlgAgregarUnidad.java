/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazUsuario;

import java.util.List;
import javax.swing.JOptionPane;
import org.bson.Document;
import repository.CursosRepository;
import repository.UnidadesRepository;

/**
 *
 * @author Alfredo Perez
 */
public class DlgAgregarUnidad extends javax.swing.JDialog {

    private CursosRepository cursosRepo;
    private UnidadesRepository unidadesRepository;
    
    /**
     * Creates new form DlgAgregarUnidad
     * @param parent
     * @param modal
     * @param cursosRepo
     */
    public DlgAgregarUnidad(java.awt.Frame parent, boolean modal, CursosRepository cursosRepo,UnidadesRepository unidadesRepository) 
    {
        super(parent, modal);
        this.initComponents();
        this.cursosRepo = cursosRepo;
        this.unidadesRepository = unidadesRepository;
        this.setTitle("Agregar Unidad");
        this.llenarComboBoxCursos();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFondo = new javax.swing.JPanel();
        etiquetaTitulo = new javax.swing.JLabel();
        etiquetaSeleccionarCurso = new javax.swing.JLabel();
        etiquetaIndice = new javax.swing.JLabel();
        etiquetaNombre = new javax.swing.JLabel();
        etiquetaDescripcion = new javax.swing.JLabel();
        etiquetaOpcional = new javax.swing.JLabel();
        comboSeleccionarCurso = new javax.swing.JComboBox<>();
        txtIndice = new javax.swing.JSpinner();
        txtNombre = new javax.swing.JTextField();
        scarollDescripcion = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        botonAgregar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        panelFondo.setBackground(new java.awt.Color(240, 202, 171));

        etiquetaTitulo.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        etiquetaTitulo.setText("Agreagar unidad de competencia");

        etiquetaSeleccionarCurso.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        etiquetaSeleccionarCurso.setText("Seleccionar curso: ");

        etiquetaIndice.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        etiquetaIndice.setText("Indice: ");

        etiquetaNombre.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        etiquetaNombre.setText("Nombre: ");

        etiquetaDescripcion.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        etiquetaDescripcion.setText("Descripcion: ");

        etiquetaOpcional.setText("(Opcional)  ");

        comboSeleccionarCurso.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        comboSeleccionarCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un curso" }));
        comboSeleccionarCurso.setPreferredSize(new java.awt.Dimension(290, 29));

        txtIndice.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        txtIndice.setPreferredSize(new java.awt.Dimension(60, 25));

        txtNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtNombre.setPreferredSize(new java.awt.Dimension(290, 25));

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        txtDescripcion.setPreferredSize(new java.awt.Dimension(290, 90));
        scarollDescripcion.setViewportView(txtDescripcion);

        botonAgregar.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        botonCancelar.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFondoLayout = new javax.swing.GroupLayout(panelFondo);
        panelFondo.setLayout(panelFondoLayout);
        panelFondoLayout.setHorizontalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFondoLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiquetaTitulo)
                    .addGroup(panelFondoLayout.createSequentialGroup()
                        .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(etiquetaSeleccionarCurso)
                            .addComponent(etiquetaIndice)
                            .addComponent(etiquetaNombre)
                            .addComponent(etiquetaDescripcion)
                            .addComponent(etiquetaOpcional))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIndice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scarollDescripcion)
                            .addGroup(panelFondoLayout.createSequentialGroup()
                                .addComponent(botonAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonCancelar))
                            .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboSeleccionarCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        panelFondoLayout.setVerticalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFondoLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(etiquetaTitulo)
                .addGap(35, 35, 35)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaSeleccionarCurso)
                    .addComponent(comboSeleccionarCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaIndice)
                    .addComponent(txtIndice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFondoLayout.createSequentialGroup()
                        .addComponent(etiquetaDescripcion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etiquetaOpcional))
                    .addComponent(scarollDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAgregar)
                    .addComponent(botonCancelar))
                .addContainerGap(93, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
       dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
       if(validarCampos())
       {
           Document unidadNueva = new Document();
           unidadNueva.append("curso", extraerCurso());
           unidadNueva.append("indice", txtIndice.getValue().toString());
           unidadNueva.append("nombre", txtNombre.getText());
           unidadNueva.append("descripcion", txtDescripcion.getText());
           if(unidadesRepository.agregarDoumento(unidadNueva))
           {
               JOptionPane.showMessageDialog(this, "La unidad de competencia se agrego correctamente!", "Mensaje Aviso", JOptionPane.INFORMATION_MESSAGE);
               dispose();
           }
           else{JOptionPane.showMessageDialog(this, "Error \n Hubo un error al agregar la unidad!","Mensaje Error", JOptionPane.ERROR_MESSAGE);}
       }
    }//GEN-LAST:event_botonAgregarActionPerformed

    private boolean validarCampos()
    {
        if(comboSeleccionarCurso.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(this, "Error \n No se ha seleccionado ningun curso!", "Mensaje Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        else if(unidadesRepository.buscarUnidad(extraerCurso(), txtIndice.getValue().toString())!=null)
        {
            JOptionPane.showMessageDialog(this, "Error \n Este indice ya fue registrado en este curso!", "Mensaje Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        else if(txtNombre.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Error! \n El campo nombre no puede estar vacio", "Mensaje Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    private Document extraerCurso()
    {
        String[] curso;
        Document documentoCurso = new Document();
        curso = comboSeleccionarCurso.getSelectedItem().toString().split(",");
        documentoCurso.append("nombre", curso[0].substring(curso[0].indexOf(":")+2, curso[0].length()));
        documentoCurso.append("periodo", curso[1].substring(curso[1].indexOf(":")+2, curso[1].length()));
        documentoCurso.append("dias", curso[2].substring(curso[2].indexOf(":")+2, curso[2].length()));
        documentoCurso.append("hora", curso[3].substring(curso[3].indexOf(":")+2, curso[3].length()));
        return documentoCurso;
    }
    
    private void llenarComboBoxCursos()
    {
       List<Document> listaCursos = cursosRepo.buscarRegistrosEnLaColeccion();
       for(int cont=0 ;cont < listaCursos.size() ;cont++)
       {
           comboSeleccionarCurso.addItem("Nombre: "+listaCursos.get(cont).getString("nombre")+
                                       ", Periodo: "+listaCursos.get(cont).getString("periodo")+
                                       ", Dias: "+listaCursos.get(cont).getString("dias")+
                                       ", Hora: "+listaCursos.get(cont).getString("hora"));
       }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JComboBox<String> comboSeleccionarCurso;
    private javax.swing.JLabel etiquetaDescripcion;
    private javax.swing.JLabel etiquetaIndice;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JLabel etiquetaOpcional;
    private javax.swing.JLabel etiquetaSeleccionarCurso;
    private javax.swing.JLabel etiquetaTitulo;
    private javax.swing.JPanel panelFondo;
    private javax.swing.JScrollPane scarollDescripcion;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JSpinner txtIndice;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
