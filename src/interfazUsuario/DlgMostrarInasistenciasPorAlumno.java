/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfazUsuario;

import java.util.ArrayList;
import java.util.List;
import org.bson.Document;
import repository.AsistenciaCursosRepository;

/**
 *
 * @author Alfredo Perez
 */
public class DlgMostrarInasistenciasPorAlumno extends javax.swing.JDialog {

    private List<Document> listaContenido;
    private List<Document> listaInasistencias;
    private AsistenciaCursosRepository asistenciaCursosRepository;
    
    /** Creates new form DlgMostrarInasistenciasPorAlumno
     * @param parent
     * @param modal
     * @param asistenciaCursosRepository */
    public DlgMostrarInasistenciasPorAlumno(java.awt.Frame parent, boolean modal, AsistenciaCursosRepository asistenciaCursosRepository) 
    {
        super(parent, modal);
        this.initComponents();
        this.asistenciaCursosRepository = asistenciaCursosRepository;
        this.listaContenido = new ArrayList<>();
        this.listaInasistencias = new ArrayList<>();
        this.extraerListaAsistenciasCusos();
        this.actualizarTablaLista();
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFondo = new javax.swing.JPanel();
        etiquetaTitulo = new javax.swing.JLabel();
        scrollPanelTabla = new javax.swing.JScrollPane();
        tablaInasistencias = new javax.swing.JTable();
        cajaSalir = new javax.swing.JPanel();
        botonSalir = new javax.swing.JButton();
        etiquetaSeleccionarAlumno = new javax.swing.JLabel();
        comboBoxSeleccionarAlumno = new javax.swing.JComboBox<>();
        etiquetaNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelFondo.setBackground(new java.awt.Color(240, 202, 171));

        etiquetaTitulo.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        etiquetaTitulo.setText("Mostrar lista de inasistencias");

        tablaInasistencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        scrollPanelTabla.setViewportView(tablaInasistencias);

        cajaSalir.setBackground(new java.awt.Color(0, 0, 0));
        cajaSalir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cajaSalir.setPreferredSize(new java.awt.Dimension(80, 30));
        cajaSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cajaSalirMousePressed(evt);
            }
        });

        botonSalir.setBackground(new java.awt.Color(255, 255, 255));
        botonSalir.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        botonSalir.setForeground(new java.awt.Color(255, 255, 255));
        botonSalir.setText("Salir");
        botonSalir.setContentAreaFilled(false);
        botonSalir.setPreferredSize(new java.awt.Dimension(80, 30));
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cajaSalirLayout = new javax.swing.GroupLayout(cajaSalir);
        cajaSalir.setLayout(cajaSalirLayout);
        cajaSalirLayout.setHorizontalGroup(
            cajaSalirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cajaSalirLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        cajaSalirLayout.setVerticalGroup(
            cajaSalirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cajaSalirLayout.createSequentialGroup()
                .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        etiquetaSeleccionarAlumno.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        etiquetaSeleccionarAlumno.setText("Seleccione un alumno: ");

        comboBoxSeleccionarAlumno.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        comboBoxSeleccionarAlumno.setMaximumRowCount(1000);
        comboBoxSeleccionarAlumno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione a un alumno" }));
        comboBoxSeleccionarAlumno.setBorder(null);
        comboBoxSeleccionarAlumno.setPreferredSize(new java.awt.Dimension(500, 25));
        comboBoxSeleccionarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSeleccionarAlumnoActionPerformed(evt);
            }
        });

        etiquetaNombre.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        etiquetaNombre.setText("Nombre:");

        txtNombre.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtNombre.setPreferredSize(new java.awt.Dimension(600, 29));

        javax.swing.GroupLayout panelFondoLayout = new javax.swing.GroupLayout(panelFondo);
        panelFondo.setLayout(panelFondoLayout);
        panelFondoLayout.setHorizontalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFondoLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFondoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cajaSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(etiquetaTitulo)
                        .addComponent(scrollPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelFondoLayout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(panelFondoLayout.createSequentialGroup()
                                    .addComponent(etiquetaSeleccionarAlumno)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(comboBoxSeleccionarAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelFondoLayout.createSequentialGroup()
                                    .addComponent(etiquetaNombre)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 35, Short.MAX_VALUE))
        );
        panelFondoLayout.setVerticalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFondoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(etiquetaTitulo)
                .addGap(31, 31, 31)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaSeleccionarAlumno)
                    .addComponent(comboBoxSeleccionarAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(etiquetaNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(scrollPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cajaSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        dispose();
    }//GEN-LAST:event_botonSalirActionPerformed

    private void cajaSalirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cajaSalirMousePressed
        dispose();
    }//GEN-LAST:event_cajaSalirMousePressed

    private void comboBoxSeleccionarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSeleccionarAlumnoActionPerformed
      if(comboBoxSeleccionarAlumno.getSelectedIndex()!=0)
      {
          String item = comboBoxSeleccionarAlumno.getSelectedItem().toString();
          String nombre = item.substring(item.indexOf(":")+2, item.length());
          extraerListaAlumnoSeleccionado(nombre);
      }   
      else
      {
         txtNombre.setText("");
         listaInasistencias.clear();
         actualizarTablaLista();
      }
    }//GEN-LAST:event_comboBoxSeleccionarAlumnoActionPerformed

    private void extraerListaAlumnoSeleccionado(String nombre)
    {
        listaInasistencias.clear();
        txtNombre.setText(nombre);
        for(int cont =0 ;cont < listaContenido.size() ;cont++)
        {
            if(listaContenido.get(cont).getString("nombre").equals(nombre))
            {
               listaInasistencias.add(listaContenido.get(cont));
            }
        }
        actualizarTablaLista();
    }
    
    private void llenarComboBoxAlumnos()
    {
        List<String> listaNombres = extraerListaNombres();
        if(listaNombres!=null && !listaNombres.isEmpty())
        {  
           for(int cont =0; cont < listaNombres.size() ; cont++)
           {
               comboBoxSeleccionarAlumno.addItem("Nombre: "+listaNombres.get(cont));
           }
        }
    }
    
    private List<String> extraerListaNombres()
    {
        List<String> listaNombres = new ArrayList<>();
        for(int cont = 0 ; cont < listaContenido.size() ;cont++)
        {
           String nombre = listaContenido.get(cont).getString("nombre");
           if(listaNombres.isEmpty())
           {
               listaNombres.add(nombre);
           }
           else
           {
               if(!comprobarSiYaSeAgrego(listaNombres, nombre))
               {
                   listaNombres.add(nombre);
               }
           }
        }
        return listaNombres;
    }
    
    private boolean comprobarSiYaSeAgrego(List<String> listaNombres, String nombre)
    {
        for(int cont2 =0 ;cont2 < listaNombres.size() ;cont2++)
        {
            if(listaNombres.get(cont2).equals(nombre))
            {
               return true;
            }
        }
        return false;
    }
    
    private void extraerListaAsistenciasCusos()
    {
        List<Document> listaAsistenciasCursos = asistenciaCursosRepository.buscarRegistrosEnLaColeccion();
        for(int cont =0 ;cont < listaAsistenciasCursos.size() ; cont++)
        {
               List<Document> listaConListasAsistencias = (List<Document>)listaAsistenciasCursos.get(cont).get("listaAsistencia");
               for(int cont2 =0; cont2 < listaConListasAsistencias.size() ;cont2++)
               {
                   if(listaConListasAsistencias.get(cont2).get("estadoAsistencia").equals("No Asistio"))
                   {
                        Document alumno = new Document();
                        alumno.append("nombre", listaConListasAsistencias.get(cont2).get("nombre"));
                        alumno.append("curso", listaAsistenciasCursos.get(cont).get("curso"));
                        alumno.append("fecha", listaAsistenciasCursos.get(cont).get("fecha"));
                        listaContenido.add(alumno);
                   }
               }
        }
        llenarComboBoxAlumnos();
    }
    
     private void actualizarTablaLista()
    {
       tablaInasistencias.setModel(new javax.swing.table.DefaultTableModel(
            convertirListaAsistenciaAObjetos(),
            new String [] {
                "Nombre Curso", "Periodo Curso", "Dias Curso", "Hora Curso", "Fecha Inasistencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
                
            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
            
            boolean[] canEdit = new boolean [] {false, false, false, false, false};

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        }); 
            tablaInasistencias.getColumnModel().getColumn(0).setResizable(false);
            tablaInasistencias.getColumnModel().getColumn(1).setResizable(false);
            tablaInasistencias.getColumnModel().getColumn(2).setResizable(false);
            tablaInasistencias.getColumnModel().getColumn(3).setResizable(false);
            tablaInasistencias.getColumnModel().getColumn(4).setResizable(false);
            //tablaLista.getColumnModel().getColumn(0).setPreferredWidth(1);
            //tablaLista.getColumnModel().getColumn(1).setPreferredWidth(300);
    }
    
     private Object[][] convertirListaAsistenciaAObjetos()
     {
         Object[][] listaObjetos;
         if(listaInasistencias!=null && !listaInasistencias.isEmpty())
         {
             listaObjetos = new Object[listaInasistencias.size()][5];
             for(int cont =0 ;cont < listaInasistencias.size() ;cont++)
             {
                 Document curso = (Document) listaInasistencias.get(cont).get("curso");
                 if(curso!=null)
                 {
                    listaObjetos[cont][0] = curso.get("nombre");
                    listaObjetos[cont][1] = curso.get("periodo");
                    listaObjetos[cont][2] = curso.get("dias");
                    listaObjetos[cont][3] = curso.get("hora");
                    listaObjetos[cont][4] = listaInasistencias.get(cont).get("fecha");
                 }
             }
             return listaObjetos;
         }
         return new Object[0][0];
     }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonSalir;
    private javax.swing.JPanel cajaSalir;
    private javax.swing.JComboBox<String> comboBoxSeleccionarAlumno;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JLabel etiquetaSeleccionarAlumno;
    private javax.swing.JLabel etiquetaTitulo;
    private javax.swing.JPanel panelFondo;
    private javax.swing.JScrollPane scrollPanelTabla;
    private javax.swing.JTable tablaInasistencias;
    private javax.swing.JLabel txtNombre;
    // End of variables declaration//GEN-END:variables

}
